# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'shopping_cart.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.cartList = QtWidgets.QListView(self.centralwidget)
        self.cartList.setGeometry(QtCore.QRect(-10, -40, 821, 461))
        self.cartList.setFlow(QtWidgets.QListView.LeftToRight)
        self.cartList.setObjectName("cartList")
        self.purchaseButton = QtWidgets.QPushButton(self.centralwidget)
        self.purchaseButton.setGeometry(QtCore.QRect(130, 450, 131, 51))
        self.purchaseButton.setStyleSheet("QPushButton {\n"
"    background-color: #444;         /* Default color (dark gray) */\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    padding: 8px 16px;\n"
"    border: none;\n"
"    border-radius: 10px;            /* Rounded corners */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: cyan;         /* Cyan on hover */\n"
"    color: black;                   /* Optional: change text color on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #00aaaa;      /* Slightly darker cyan when clicked */\n"
"}\n"
"")
        self.purchaseButton.setObjectName("purchaseButton")
        self.backButton = QtWidgets.QPushButton(self.centralwidget)
        self.backButton.setGeometry(QtCore.QRect(350, 450, 131, 51))
        self.backButton.setStyleSheet("QPushButton {\n"
"    background-color: #444;         /* Default color (dark gray) */\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    padding: 8px 16px;\n"
"    border: none;\n"
"    border-radius: 10px;            /* Rounded corners */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: cyan;         /* Cyan on hover */\n"
"    color: black;                   /* Optional: change text color on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #00aaaa;      /* Slightly darker cyan when clicked */\n"
"}\n"
"")
        self.backButton.setObjectName("backButton")
        self.returnButton = QtWidgets.QPushButton(self.centralwidget)
        self.returnButton.setGeometry(QtCore.QRect(570, 450, 131, 51))
        self.returnButton.setStyleSheet("QPushButton {\n"
"    background-color: #444;         /* Default color (dark gray) */\n"
"    color: white;\n"
"    font-size: 14px;\n"
"    padding: 8px 16px;\n"
"    border: none;\n"
"    border-radius: 10px;            /* Rounded corners */\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"    background-color: cyan;         /* Cyan on hover */\n"
"    color: black;                   /* Optional: change text color on hover */\n"
"}\n"
"\n"
"QPushButton:pressed {\n"
"    background-color: #00aaaa;      /* Slightly darker cyan when clicked */\n"
"}\n"
"")
        self.returnButton.setObjectName("returnButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.purchaseButton.setText(_translate("MainWindow", "Purchase"))
        self.backButton.setText(_translate("MainWindow", "Go Back"))
        self.returnButton.setText(_translate("MainWindow", "Return Product"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
